<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core"
	xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:xe="http://www.ibm.com/xsp/coreex">
	
	<xp:this.resources>
		<xp:bundle var="strings" src="/strings.properties"></xp:bundle>
	</xp:this.resources>
	
	<xp:panel>
	<xp:this.data>
		<xp:dominoDocument var="document1" action="editDocument" formName="Mission">
			<xp:this.documentId>
				<![CDATA[#{javascript:
						try{
							var missionView:NotesView = database.getView("MissionLookup");
							if(null != missionView){
								missionView.refresh();
								var missionNote:NotesDocument = missionView.getDocumentByKey("Mission");
								if(null == missionNote){
									// Mission does not exist
									missionNote = database.createDocument();
									missionNote.appendItemValue("Form","Mission");
									missionNote.appendItemValue("TeamName", strings.getString("teamroom.name"));
									missionNote.computeWithForm(false, false);
									missionNote.save(true);
									missionView.refresh();
								}
								return missionNote.getNoteID();
							}
						}catch(e){
							print("documentId exception: " + e);
							throw e;
						}
						return null;
				}]]>
			</xp:this.documentId>
		</xp:dominoDocument>
	</xp:this.data>
   
	<xp:eventHandler event="onClientLoad" submit="false">
		<xp:this.script>
			<![CDATA[if(!dojo.exists("ibm.xsp.widget.layout.xspClientRCP")){insertLinks();}]]>
		</xp:this.script>
	</xp:eventHandler>
	
	<xe:keepSessionAlive id="keepSessionAlive1"></xe:keepSessionAlive>

	<xp:label id="labelUpdateFieldsOnSavePrototype" rendered="true">
		<xp:this.value><![CDATA[#{javascript:

if (!prototype.updateFieldsOnSave)
{
	prototype.updateFieldsOnSave = function(source, target, sort, fieldname)
	{
		function isArray(obj)
		{
		   return obj.constructor == Array;
		}
		
		var fieldSource = getComponent(source);
		var fieldTarget = getComponent(target);
		if ((fieldSource!=null)&&(fieldTarget!=null))
		{
			// Get the items (could be a string or an array)
			var itemsObject = fieldSource.getValue();
			var itemsArray;
			
			//If we have performed localisation to docTypes, and are saving we 
			//need to revert the translated doc types back to their original values
			//to preserve functionality
			var locale = context.getLocaleString();
			if(!sort && !locale.equals("en")) {
				var itemsString;					
				// If it's an array, implode it into a string
				if (isArray(itemsObject)){
					itemsString = @Implode(itemsString,"\n");
				}else{
					itemsString = itemsObject;
				}
				
				//Get the original default doc type values
				var missionView:NotesView = database.getView("MissionLookup");
				var missionNote:NotesDocument = missionView.getDocumentByKey("Mission");
				if(null != missionNote){
					var default1 = missionNote.getItemValue("DefaultDocType1").elementAt(0);
					var default2 = missionNote.getItemValue("DefaultDocType2").elementAt(0);
					var default3 = missionNote.getItemValue("DefaultDocType3").elementAt(0);
					var default4 = missionNote.getItemValue("DefaultDocType4").elementAt(0);
					
					if(itemsString.contains(strings.getString("defaultdoctype1"))) {
						itemsString = itemsString.replace(strings.getString("defaultdoctype1"), default1);
					}
					if(itemsString.contains(strings.getString("defaultdoctype2"))) {
						itemsString = itemsString.replace(strings.getString("defaultdoctype2"), default2);
					}
					if(itemsString.contains(strings.getString("defaultdoctype3"))) {
						itemsString = itemsString.replace(strings.getString("defaultdoctype3"), default3);
					}
					if(itemsString.contains(strings.getString("defaultdoctype4"))) {
						itemsString = itemsString.replace(strings.getString("defaultdoctype4"), default4);
					}
				}
				
				itemsObject = itemsString;
			}		
			//end of translation reversion	
			
			// If it's a string, explode it into an array
			if (isArray(itemsObject))
				itemsArray = itemsObject;
			else
				itemsArray = @Trim(@Explode(itemsObject,"\n;"));
		
			// Sort the array
			if ((sort==true)&&(isArray(itemsArray)))
				itemsArray.sort();
			
			// Implode the array into a newline sorted string (source)
			fieldSource.setValue(@Implode(itemsArray,"\n"));
			// Implode the array into a newline sorted string (target)
			fieldTarget.setValue(@Implode(itemsArray,","));
			
			// Force a save
			if (sort==false)
			{
				document1.getDocument().replaceItemValue(fieldname,@Explode(itemsArray,","));				
				//document1.getDocument().save(true,false);
			}			
		}
	}	
}

return "";

		}]]></xp:this.value>
	</xp:label>

	<xe:applicationLayout id="applicationLayout1">
		<xe:this.configuration>
			<xe:oneuiApplication navigationPath="/setup"
				defaultNavigationPath="/home" footer="false" mastHeader="true">
				<xe:this.searchBar>
					<xe:appSearchBar pageName="search.xsp"
						inactiveText="Search..." optionsParam="search" queryParam="search"
						loaded="${javascript:database.isFTIndexed()}"
						inputTitle="Enter a search value">
					</xe:appSearchBar>
				</xe:this.searchBar>
				<xe:this.bannerUtilityLinks>
					<xe:userTreeNode>
						<xe:this.label><![CDATA[#{javascript:I18n.format(strings.getString("welcome.x"), userBean.displayName)}]]></xe:this.label>
					</xe:userTreeNode>
					<xe:loginTreeNode></xe:loginTreeNode>
				</xe:this.bannerUtilityLinks>
				<xe:this.placeBarName><![CDATA[#{javascript:var teamname = strings.getString("teamroom.name");
var vw:NotesView = database.getView("MissionLookup");
var vc:NotesViewEntryCollection = vw.getAllEntries();
var ve:NotesViewEntry = vc.getFirstEntry();
if(null != ve){
	var v:java.util.Vector = ve.getColumnValues();
	if(!v.isEmpty()){
		// get the teamroom name
		teamname = v.get(1) || teamname;
	}
}
return teamname;}]]></xe:this.placeBarName>
				<xe:this.legalText>
					<![CDATA[#{javascript:
						return "\u200e" + I18n.format(strings.getString("teamroom.legal"), 
													   strings.getString("teamroom.legal.copyright.year1"),
													   strings.getString("teamroom.legal.copyright.year2"))
										 + "\u202C";}]]>
				</xe:this.legalText>
			</xe:oneuiApplication>
		</xe:this.configuration>
		<xp:text escape="true" id="titleField" tagName="h1"
			value="#{javascript:strings.getString('teamroom.setup')}">
		</xp:text>
		<xp:button value="Save" id="saveCloseButton">
			<xp:this.loaded><![CDATA[${javascript:(userBean.accessLevel > lotus.domino.ACL.LEVEL_AUTHOR) && userBean.canCreateDocs}]]></xp:this.loaded>
			
		<xp:eventHandler event="onclick" submit="true" refreshMode="complete">
			<xp:this.action>
				<xp:actionGroup>
					<xp:executeScript>
						<xp:this.script><![CDATA[#{javascript:
						
updateFieldsOnSave("fieldDocumentTags", "fieldDocumentTagsHidden", false, "Categories");
updateFieldsOnSave("fieldDocumentTypes", "fieldDocumentTypesHidden", false, "DocType");

}]]></xp:this.script>
					</xp:executeScript>
					<xp:saveDocument></xp:saveDocument><xp:openPage name="/home.xsp"></xp:openPage>
				</xp:actionGroup>
			</xp:this.action></xp:eventHandler>
		</xp:button>
		
		<xp:link id="cancelLink" text="Cancel" value="/home.xsp"></xp:link>
		<xp:br></xp:br>
		<xp:tabbedPanel id="tabbedPanel1">
		
			<xp:this.loaded><![CDATA[${javascript:(userBean.accessLevel > lotus.domino.ACL.LEVEL_AUTHOR) && userBean.canCreateDocs}]]></xp:this.loaded>

			<xp:tabPanel label="Basics" id="tabPanel1">
				<xc:setupBasics id="basics"></xc:setupBasics>
			</xp:tabPanel>

<!--			<xp:tabPanel label="Home Page" id="tabPanel2">-->
<!--				<xc:setupHomePage></xc:setupHomePage>-->
<!--			</xp:tabPanel>-->

			<xp:tabPanel label="Tags (Categories)" id="tabPanel3">
				<xc:setupTags id="tags"></xc:setupTags>
			</xp:tabPanel>

			<xp:tabPanel label="Document Types" id="tabPanel4">
				<xc:setupDocumentTypes id="docTypes"></xc:setupDocumentTypes>
			</xp:tabPanel>

			<xp:tabPanel label="Accessibility" id="tabPanel6">
				<xc:setupAccessibility id="setupAccessibility"></xc:setupAccessibility>
			</xp:tabPanel>
			
			<xp:tabPanel label="Advanced Options" id="tabPanel5">
				<xc:setupAdvancedOptions id="advanced"></xc:setupAdvancedOptions>
			</xp:tabPanel>

		</xp:tabbedPanel>
	</xe:applicationLayout>
	</xp:panel>
</xp:view>
