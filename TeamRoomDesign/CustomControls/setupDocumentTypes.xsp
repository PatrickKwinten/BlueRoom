<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core">

	<xp:label id="label1" style="font-weight:bold">
		<xp:this.value><![CDATA[#{javascript:return I18n.format(strings.getString("setup.documenttypes.title"));}]]></xp:this.value>
	</xp:label>
	
	<xp:br></xp:br><xp:br></xp:br>

	<xp:label id="label2">
		<xp:this.value><![CDATA[#{javascript:return I18n.format(strings.getString("setup.documenttypes.message1"));}]]></xp:this.value>
	</xp:label>
	
	<xp:br></xp:br>

	<xp:label id="label3" style="font-weight:bold">
		<xp:this.value><![CDATA[#{javascript:return I18n.format(strings.getString("setup.documenttypes.note"));}]]></xp:this.value>
	</xp:label>

	<xp:label id="label4">
		<xp:this.value><![CDATA[#{javascript:return I18n.format(strings.getString("setup.documenttypes.message2"));}]]></xp:this.value>
	</xp:label>

	<xp:div id="docTypePartialRefreshArea">

	<xp:table border="0" cellpadding="0" cellspacing="0" role="presentation">
		<xp:tr>

			<xp:td>
				<xp:inputText id="fieldDocumentTypesHidden"
					value="#{document1.DocType}" multipleSeparator=","
					multipleTrim="true" rendered="false">
				</xp:inputText>
			</xp:td>

			<xp:td>
				<xp:inputTextarea id="fieldDocumentTypes" cols="40"
					rows="10" role="textbox"
					title="List of available document types">
					<xp:this.defaultValue><![CDATA[#{javascript:
						function isArray(obj) {
						   return obj.constructor == Array;
						}
						
						// Get the items (could be a string or an array)
						var itemsString = getComponent("fieldDocumentTypesHidden").getValue();
					
						// If it's an array, implode it into a string
						if (isArray(itemsString)){
							itemsString = @Implode(itemsString,"\n");
						}
						
						//Get the original default doc type values
						var missionView:NotesView = database.getView("MissionLookup");
						var missionNote:NotesDocument = missionView.getDocumentByKey("Mission");
						if(null != missionNote){
							var default1 = missionNote.getItemValue("DefaultDocType1").elementAt(0);
							var default2 = missionNote.getItemValue("DefaultDocType2").elementAt(0);
							var default3 = missionNote.getItemValue("DefaultDocType3").elementAt(0);
							var default4 = missionNote.getItemValue("DefaultDocType4").elementAt(0);
						
							if(itemsString.contains(default1)) {
								itemsString = itemsString.replace(default1, strings.getString("defaultdoctype1"));
							}
							if(itemsString.contains(default2)) {
								itemsString = itemsString.replace(default2, strings.getString("defaultdoctype2"));
							}
							if(itemsString.contains(default3)) {
								itemsString = itemsString.replace(default3, strings.getString("defaultdoctype3"));
							}
							if(itemsString.contains(default4)) {
								itemsString = itemsString.replace(default4, strings.getString("defaultdoctype4"));
							}
						}
					
						return itemsString;
					}]]></xp:this.defaultValue>
				</xp:inputTextarea>
			</xp:td>

			<xp:td>
				<xp:text escape="false" id="computedField1">
					<xp:this.value><![CDATA[#{javascript:return "&nbsp;";}]]></xp:this.value>
				</xp:text>
			</xp:td>

			<xp:td valign="top">
				<xp:button id="sortDocumentTags" themeId="Button.Cancel">
					<xp:this.value><![CDATA[#{javascript:return I18n.format(strings.getString("setup.tags.sort"));}]]></xp:this.value>
					<xp:eventHandler event="onclick" submit="true"
						refreshMode="partial" refreshId="fieldDocumentTypes">
						<xp:this.action><![CDATA[#{javascript:
				
updateFieldsOnSave("fieldDocumentTypes", "fieldDocumentTypesHidden", true, null);

}]]></xp:this.action>
					</xp:eventHandler>
				</xp:button>
			</xp:td>
			
		</xp:tr>
	</xp:table>
	</xp:div>
</xp:view>